version: "3.9"
services:
  api_gateway:
    build:
      context: .
      dockerfile: DockerfileDev
    ports:
      - "8080:8080"
    volumes:
         - .:/app
    command: [ "air", "-c", "/app/air.toml" ]
    environment:
      - LOG_LEVEL=debug
      - GO_ENV=development
      - RABBITMQ_URL=${RABBITMQ_URL}
    depends_on:
      - postgres
      - rabbitmq
      - grpc_auth
    networks:
      - dev_network

  grpc_auth:
    build:
      context: .
      dockerfile: DockerfileGrpc_auth
    ports:
      - "50051:50051"
    volumes:
          - .:/app
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - SMTPHOST=${SMTPHOST}
      - SMTPPORT=${SMTPPORT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - dev_network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
#      PGOPTIONS: "--shared_preload_libraries=pg_stat_statements"
    ports:
      - "5432:5432"
    networks:
      - dev_network
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - dev_network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - ./services/redis-data:/data

#  postgres_exporter:
#    image: quay.io/prometheuscommunity/postgres-exporter:latest
#    ports:
#      - "9187:9187"
#    environment:
#      DATA_SOURCE_NAME: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable"
#    depends_on:
#      - postgres
#    networks:
#      - dev_network

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    volumes:
#      - ./services/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090" # Prometheus dashboard
#    depends_on:
#      - api_gateway
#      - grpc_auth
#      - postgres
#    networks:
#      - dev_network
#
#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    ports:
#      - "3000:3000"  # Grafana UI
#    user: root
#    environment:
#      - GF_SECURITY_ADMIN_USER=m_admin
#      - GF_SECURITY_ADMIN_PASSWORD=pwd123!3444
#      - GF_DATASOURCES__DATASOURCES_0_NAME=Prometheus
#      - GF_DATASOURCES__DATASOURCES_0_TYPE=prometheus
#      - GF_DATASOURCES__DATASOURCES_0_URL=http://localhos:9090
#      - GF_DATASOURCES__DATASOURCES_0_ACCESS=proxy
#    volumes:
#      - ./services/grafana/data:/var/lib/grafana
#      - ./services/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
#      - ./services/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
#    networks:
#      - dev_network
#    depends_on:
#      - prometheus

networks:
  dev_network:
    driver: bridge